#!/bin/bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Banner function
function search_banner() {
    echo -e "${RED}███████╗${GREEN}███████╗${YELLOW} █████╗ ${BLUE}██████╗ ${PURPLE} ██████╗${CYAN}██╗  ██╗"
    echo -e "${RED}██╔════╝${GREEN}██╔════╝${YELLOW}██╔══██╗${BLUE}██╔══██╗${PURPLE}██╔════╝${CYAN}██║  ██║"
    echo -e "${RED}███████╗${GREEN}█████╗  ${YELLOW}███████║${BLUE}██████╔╝${PURPLE}██║     ${CYAN}███████║"
    echo -e "${RED}╚════██║${GREEN}██╔══╝  ${YELLOW}██╔══██║${BLUE}██╔══██╗${PURPLE}██║     ${CYAN}██╔══██║"
    echo -e "${RED}███████║${GREEN}███████╗${YELLOW}██║  ██║${BLUE}██║  ██║${PURPLE}╚██████╗${CYAN}██║  ██║"
    echo -e "${RED}╚══════╝${GREEN}╚══════╝${YELLOW}╚═╝  ╚═╝${BLUE}╚═╝  ╚═╝${PURPLE} ╚═════╝${CYAN}╚═╝  ╚═╝${NC}"
    echo -e "${WHITE}=== Exploit Search Tool ===${NC}\n"
}

# Check dependencies
function check_dependencies() {
    local missing=()
    
    if ! command -v curl &> /dev/null; then
        missing+=("curl")
    fi
    
    if ! command -v jq &> /dev/null; then
        missing+=("jq")
    fi
    
    if [ ${#missing[@]} -gt 0 ]; then
        echo -e "${RED}[!] Missing dependencies:${NC} ${missing[*]}"
        echo -e "Install them with:"
        echo -e "  sudo apt install ${missing[*]}"
        exit 1
    fi
}

# Search functions
function search_exploitdb() {
    local query="$1"
    echo -e "\n${YELLOW}[+] Exploit-DB Results for: ${WHITE}$query${NC}"
    local results=$(curl -s "https://www.exploit-db.com/search?q=$query" | grep -oP 'href="/exploits/\d+"' | sed 's/href="//;s/"//g' | sort -u)
    
    if [ -z "$results" ]; then
        echo -e "${RED}No results found${NC}"
    else
        echo "$results" | while read -r exploit; do
            echo -e "${GREEN}https://www.exploit-db.com$exploit${NC}"
        done
    fi
}

function search_nvd() {
    local cve="$1"
    echo -e "\n${YELLOW}[+] NVD Results for: ${WHITE}$cve${NC}"
    local response=$(curl -s "https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=$cve")
    
    if echo "$response" | jq -e '.vulnerabilities' > /dev/null; then
        echo "$response" | jq -r '.vulnerabilities[].cve | "\(.id): \(.descriptions[0].value)\nPublished: \(.published)\nSeverity: \(.metrics.cvssMetricV2?[0].cvssData.baseSeverity // .metrics.cvssMetricV30?[0].cvssData.baseSeverity // "Unknown")\n"'
    else
        echo -e "${RED}No results found or invalid CVE format${NC}"
        echo -e "Note: CVE should be in format CVE-YYYY-NNNN"
    fi
}

function search_github() {
    local query="$1"
    echo -e "\n${YELLOW}[+] GitHub Results for: ${WHITE}$query${NC}"
    local results=$(curl -s "https://api.github.com/search/repositories?q=$query+exploit+OR+POC" | jq -r '.items[] | "\(.html_url) - \(.description // "No description")\nStars: \(.stargazers_count) | Updated: \(.updated_at)\n"')
    
    if [ -z "$results" ]; then
        echo -e "${RED}No results found${NC}"
    else
        echo "$results"
    fi
}

function search_packetstorm() {
    local query="$1"
    echo -e "\n${YELLOW}[+] PacketStorm Results for: ${WHITE}$query${NC}"
    local results=$(curl -s "https://packetstormsecurity.com/search/files/?q=$query" | grep -oP 'href="/files/download/\d+/[^"]+"' | sed 's/href="//;s/"//g' | sort -u)
    
    if [ -z "$results" ]; then
        echo -e "${RED}No results found${NC}"
    else
        echo "$results" | while read -r exploit; do
            echo -e "${GREEN}https://packetstormsecurity.com$exploit${NC}"
        done
    fi
}

# Main menu
function main_menu() {
    clear
    search_banner
    
    echo -e "${WHITE}1. Search by CVE (NVD)"
    echo -e "2. Search Exploit-DB"
    echo -e "3. Search GitHub (PoCs)"
    echo -e "4. Search PacketStorm"
    echo -e "5. Search all sources"
    echo -e "6. Exit${NC}"
    
    read -p "Choose an option (1-6): " option
    
    case $option in
        1)
            read -p "Enter CVE (e.g., CVE-2021-44228): " cve
            search_nvd "$cve"
            ;;
        2)
            read -p "Enter keyword (e.g., Apache): " query
            search_exploitdb "$query"
            ;;
        3)
            read -p "Enter keyword or CVE (e.g., CVE-2021-44228): " query
            search_github "$query"
            ;;
        4)
            read -p "Enter keyword (e.g., RCE): " query
            search_packetstorm "$query"
            ;;
        5)
            read -p "Enter keyword or CVE: " query
            search_nvd "$query"
            search_exploitdb "$query"
            search_github "$query"
            search_packetstorm "$query"
            ;;
        6)
            echo -e "${GREEN}Exiting...${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}Invalid option${NC}"
            ;;
    esac
    
    read -p "Press Enter to continue..."
    main_menu
}

# Main execution
check_dependencies
main_menu